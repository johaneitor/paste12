=== DETECTAR PUERTO LOCAL ===
PORT_LOCAL=8000

=== RUTAS EN routes.py (decoradores y defs relevantes) ===
650:@bp.route('/api/notes', methods=['GET'])
651:def list_notes():
665:@bp.route('/api/notes', methods=['POST'])
666:def create_note():

=== CONTEXTO ALREDEDOR DE create_note (80 líneas) ===
   636	
   637	        # 3) índices útiles
   638	        db.session.execute(text("CREATE INDEX IF NOT EXISTS ix_view_log_note_id ON public.view_log (note_id)"))
   639	        db.session.execute(text("CREATE INDEX IF NOT EXISTS ix_view_log_view_date ON public.view_log (view_date)"))
   640	        out["created"] += ["index:ix_view_log_note_id","index:ix_view_log_view_date"]
   641	    else:
   642	        # sqlite/otros
   643	        db.session.execute(text("CREATE UNIQUE INDEX IF NOT EXISTS uq_viewlog_note_fp_day_v2 ON view_log(note_id, fingerprint, view_date)"))
   644	        db.session.execute(text("CREATE INDEX IF NOT EXISTS ix_view_log_note_id ON view_log (note_id)"))
   645	        db.session.execute(text("CREATE INDEX IF NOT EXISTS ix_view_log_view_date ON view_log (view_date)"))
   646	        out["created"] += ["index:uq_viewlog_note_fp_day_v2","index:ix_view_log_note_id","index:ix_view_log_view_date"]
   647	
   648	    db.session.commit()
   649	    return jsonify(out), 200
   650	@bp.route('/api/notes', methods=['GET'])
   651	def list_notes():
   652	    from flask import request, jsonify
   653	    try:
   654	        page = int(request.args.get('page', 1))
   655	    except Exception:
   656	        page = 1
   657	    page = max(1, page)
   658	    try:
   659	        q = Note.query.order_by(Note.timestamp.desc())
   660	        items = q.limit(20).offset((page-1)*20).all()
   661	        now = _now()
   662	        return jsonify([_note_json(n, now) for n in items]), 200
   663	    except Exception as e:
   664	        return jsonify({"error":"list_failed","detail":str(e)}), 500
   665	@bp.route('/api/notes', methods=['POST'])
   666	def create_note():
   667	    from flask import request, jsonify
   668	    from datetime import timedelta
   669	    data = request.get_json(silent=True) or {}
   670	    text = (data.get('text') or '').strip()
   671	    if not text:
   672	        return jsonify({"error":"text required"}), 400
   673	    try:
   674	        hours = int(data.get('hours', 24))
   675	    except Exception:
   676	        hours = 24
   677	    hours = min(168, max(1, hours))
   678	    now = _now()
   679	    try:
   680	        n = Note(
   681	            text=text,
   682	            timestamp=now,
   683	            expires_at=now + timedelta(hours=hours),
   684	            author_fp=client_fingerprint(),
   685	        )
   686	        db.session.add(n)
   687	        db.session.commit()
   688	        return jsonify(_note_json(n, now)), 201
   689	    except Exception as e:
   690	        db.session.rollback()
   691	        return jsonify({"error":"create_failed","detail":str(e)}), 500
   692	

=== ESQUEMA SQLITE (tabla note) ===

=== HOOK LOG (últimas 80) ===

=== LOG APP LOCAL (últimas 120) ===
/data/data/com.termux/files/usr/lib/python3.12/site-packages/flask_limiter/extension.py:316: UserWarning: Using the in-memory storage for tracking rate limits as no storage was explicitly specified. This is not recommended for production use. See: https://flask-limiter.readthedocs.io#configuring-a-storage-backend for documentation about configuring the storage backend.
  warnings.warn(
[2025-08-21 20:47:08,339] ERROR in __init__: No se pudo registrar blueprint API: View function mapping is overwriting an existing endpoint function: api.like_note
[2025-08-21 20:47:08,480] ERROR in routes: API error: 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.
Traceback (most recent call last):
  File "/data/data/com.termux/files/usr/lib/python3.12/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/data/com.termux/files/usr/lib/python3.12/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/data/com.termux/files/usr/lib/python3.12/site-packages/flask/app.py", line 502, in <lambda>
    view_func=lambda **kw: self_ref().send_static_file(**kw),  # type: ignore # noqa: B950
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/data/com.termux/files/usr/lib/python3.12/site-packages/flask/scaffold.py", line 318, in send_static_file
    return send_from_directory(
           ^^^^^^^^^^^^^^^^^^^^
  File "/data/data/com.termux/files/usr/lib/python3.12/site-packages/flask/helpers.py", line 557, in send_from_directory
    return werkzeug.utils.send_from_directory(  # type: ignore[return-value]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/data/com.termux/files/usr/lib/python3.12/site-packages/werkzeug/utils.py", line 575, in send_from_directory
    raise NotFound()
werkzeug.exceptions.NotFound: 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.
ERROR:backend:API error: 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.
Traceback (most recent call last):
  File "/data/data/com.termux/files/usr/lib/python3.12/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/data/com.termux/files/usr/lib/python3.12/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/data/com.termux/files/usr/lib/python3.12/site-packages/flask/app.py", line 502, in <lambda>
    view_func=lambda **kw: self_ref().send_static_file(**kw),  # type: ignore # noqa: B950
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/data/com.termux/files/usr/lib/python3.12/site-packages/flask/scaffold.py", line 318, in send_static_file
    return send_from_directory(
           ^^^^^^^^^^^^^^^^^^^^
  File "/data/data/com.termux/files/usr/lib/python3.12/site-packages/flask/helpers.py", line 557, in send_from_directory
    return werkzeug.utils.send_from_directory(  # type: ignore[return-value]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/data/com.termux/files/usr/lib/python3.12/site-packages/werkzeug/utils.py", line 575, in send_from_directory
    raise NotFound()
werkzeug.exceptions.NotFound: 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.
[2025-08-21 20:47:08,519] ERROR in routes: API error: like_note() missing 1 required positional argument: 'note_id'
Traceback (most recent call last):
  File "/data/data/com.termux/files/usr/lib/python3.12/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/data/com.termux/files/usr/lib/python3.12/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: like_note() missing 1 required positional argument: 'note_id'
ERROR:backend:API error: like_note() missing 1 required positional argument: 'note_id'
Traceback (most recent call last):
  File "/data/data/com.termux/files/usr/lib/python3.12/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/data/com.termux/files/usr/lib/python3.12/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: like_note() missing 1 required positional argument: 'note_id'

=== SMOKE LOCAL ===
--- GET /api/notes?page=1
HTTP/1.1 500 INTERNAL SERVER ERROR
Content-Length: 159
Content-Type: application/json
Date: Thu, 21 Aug 2025 23:47:41 GMT
Server: waitress

{"error":"404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.","ok":false}

--- POST /api/notes
HTTP/1.1 500 INTERNAL SERVER ERROR
Content-Length: 85
Content-Type: application/json
Date: Thu, 21 Aug 2025 23:47:41 GMT
Server: waitress

{"error":"like_note() missing 1 required positional argument: 'note_id'","ok":false}

=== SMOKE RENDER ===
--- GET https://paste12-rmsk.onrender.com/api/notes?page=1
HTTP/2 404 
date: Thu, 21 Aug 2025 23:47:43 GMT
content-type: text/html; charset=utf-8
rndr-id: 3ee6f749-71b1-4086
vary: Accept-Encoding
x-render-origin-server: gunicorn
cf-cache-status: DYNAMIC
server: cloudflare
cf-ray: 972e04600eccba73-EZE
alt-svc: h3=":443"; ma=86400

<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

--- POST https://paste12-rmsk.onrender.com/api/notes
HTTP/2 405 
date: Thu, 21 Aug 2025 23:47:43 GMT
content-type: text/html; charset=utf-8
allow: GET, HEAD, OPTIONS
rndr-id: e337e97c-13d0-40ab
vary: Accept-Encoding
x-render-origin-server: gunicorn
cf-cache-status: DYNAMIC
server: cloudflare
cf-ray: 972e04637bdeba65-EZE
alt-svc: h3=":443"; ma=86400

<!doctype html>
<html lang=en>
<title>405 Method Not Allowed</title>
<h1>Method Not Allowed</h1>
<p>The method is not allowed for the requested URL.</p>

